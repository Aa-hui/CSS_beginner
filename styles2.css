/* body {
    color: green;
} */
          
.my-class-1 a {
    color: inherit;
}
          
.my-class-2 a {
    color: initial;
}
          
.my-class-3 a {
    color: unset;
}
    
blockquote {
    background-color: red;
    border: 2px solid green;
}
        
.fix-this {
    /* all: unset; */
    /* 注意区分 unset 和 initial的区别
        因为本样式表中，对 body 有一个设置，更改了颜色为绿色，所以unset也会继承这个属性
        并不是简单的更改为默认值*/
    all:initial;
    /* initial 不一样，就会设置为默认值，在这里可以看到，字变成了黑色 */
}
    
/* ******************************************************* */
/* 接下来测试优先级 */

/* specificity: 0101 */
#outer a {
    background-color: red;
}
        
/* specificity: 0201 */
#outer #inner a {
    background-color: blue;
}
/* 前面两个选择器都是链接背景颜色的样式 
— 第二个赢了使得背景变成蓝色因为它多了一个ID选择器：优先级 201 vs. 101 */

/* specificity: 0104 */
#outer div ul li a {
    color: yellow;
}

/* specificity: 0113 */
#outer div ul .nav a {
    color: white;
}
/* 第三四个选择器都是链接文本颜色样式 — 
第二个（第四个）赢了使得文本变成白色
因为它虽然少一个元素选择器，但是多了一个类选择器，多了9分。所以优先级是 113 vs. 104 */


/* specificity: 0024 */
div div li:nth-child(2) a:hover {
    border: 10px solid black;
}

/* specificity: 0023 */
div li:nth-child(2) a:hover {
    border: 10px dashed black;
}

/* specificity: 0033 */
div div .nav:nth-child(2) a:hover {
    border: 10px double black;
}
/* 第5到7个选择器都是鼠标悬停时链接边框样式。
第六个显然输给第五个优先级是 23 vs. 24 — 少了个元素选择器。 
第七个，比第五第六都高 — 子选择器数量相同，但是有一个元素选择器变成类选择器。
所以最后优先级是 33 vs. 23 和 24 */

a {
    display: inline-block;
    line-height: 40px;
    font-size: 20px;
    text-decoration: none;
    text-align: center;
    width: 200px;
    margin-bottom: 10px;
}

ul {
    padding: 0;
}

li {
    list-style-type: none;
}            
    

/* ******************************************************* */
/* 学习important */

#winning {
    background-color: red;
    border: 3px solid black;
}
    
.better {
    background-color: gray;
    /* border: none !important; */
    /* 这条的优先级更低，但是因为用了！important 所以最后没有边框 */
}
    
span {
    background-color: blue;
    color: white;
    padding: 5px;
}           
/* 删除部分属性后进行测试
1.你会发现第三个规则 color 和 padding 的值被应用了，但是 background-color 没有。
为什么? 应该三个都应用，因为顺序规则是后面覆盖前面。
2.无论如何， 上面的规则赢了，因为类选择器比元素选择器有更高的优先级。
3.两个元素都有  better class，但是第二个有 id 。
因为ID选择器比类选择器优先级更高
 (一个页面只能有一个独特的ID，但是很多元素都有相同的类 — ID 对于目标非常独特)，
 红色背景和1 pixel black border 应该都被应用到第二个元素，
 第一个元素应该是灰色背景和 no border，根据类选择器。
4.第二个元素有红色背景但是没有边框。
为什么?因为 !important 声明在第二条规则里
 — 在 border: none 后面，说明即使计算优先级低这个属性也使用这个值。
*/

/* 个人认为这个测试有点不大合理，会使得逻辑混乱，可以直接保留第二块测试元素，有class和id
    能满足测试需求 */


/* ******************************************************* */

/* p::first-line{
    color: crimson;
} */


/* 测试一下伪类和伪类元素 */
article p:first-child::first-line {
    font-size: 120%;
    font-weight: bold;
}


